System.register(["jimu-core","jimu-arcgis","esri/widgets/Editor"],(function(e,t){var r={},a={},o={};return{setters:[function(e){r.React=e.React},function(e){a.JimuMapViewComponent=e.JimuMapViewComponent},function(e){o.default=e.default}],execute:function(){e((()=>{var e={8816:e=>{"use strict";e.exports=o},2686:e=>{"use strict";e.exports=a},9244:e=>{"use strict";e.exports=r}},t={};function c(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,c),o.exports}c.d=(e,t)=>{for(var r in t)c.o(t,r)&&!c.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.p="";var s={};return c.p=window.jimuConfig.baseUrl,(()=>{"use strict";c.r(s),c.d(s,{__set_webpack_public_path__:()=>o,default:()=>a});var e=c(9244),t=c(2686),r=c(8816);class a extends e.React.PureComponent{constructor(t){super(t),this.myRef=e.React.createRef(),this.activeViewChangeHandler=e=>{if(console.log("activeViewChangeHandler called",e),this.state.jimuMapView&&this.state.currentWidget&&this.state.currentWidget.destroy(),e){this.setState({jimuMapView:e});const t=e.view.map.layers.toArray(),a=new Set;if(t.forEach((e=>{"feature"===e.type&&e.queryFeatures().then((e=>{e.features.forEach((e=>{a.add(e.attributes.projet)})),this.setState({projects:Array.from(a).map((e=>({name:e,id:e})))}),console.log("Projects updated:",this.state.projects)})).catch((t=>{console.error(`Error querying features of layer ${e.title}:`,t)}))})),this.myRef.current){const t=new r.default({view:e.view,container:this.myRef.current});t.on("sketch-create",(e=>{const t=e.detail.graphic;t.attributes.projet=this.state.selectedProjectId,console.log("Feature created:",t)})),this.setState({currentWidget:t})}else console.error("could not find this.myRef.current")}},this.addProject=()=>{const e={name:this.state.projectName,id:this.state.projectName};this.setState((t=>({projects:[...t.projects,e],projectName:"",selectedProjectId:e.id}))),console.log("Project added:",e)},this.removeProject=()=>{this.setState((e=>{const t=e.projects.filter((t=>t.id!==e.selectedProjectId));return{projects:t,selectedProjectId:t.length>0?t[0].id:null}})),console.log("Project removed")},this.handleProjectNameChange=e=>{this.setState({projectName:e.target.value}),console.log("Project name changed:",e.target.value)},this.handleProjectSelectionChange=e=>{this.setState({selectedProjectId:e.target.value}),console.log("Project selected:",e.target.value)},this.onFeatureEdit=e=>{"create"===e.type&&this.state.selectedProjectId&&(e.feature.attributes.projet=this.state.selectedProjectId)},this.state={jimuMapView:null,currentWidget:null,projects:[],selectedProjectId:null,projectName:""},console.log("Widget constructor initialized")}render(){var r;let a=e.React.createElement("p",null,"Please select a map.");return Object.prototype.hasOwnProperty.call(this.props,"useMapWidgetIds")&&this.props.useMapWidgetIds&&this.props.useMapWidgetIds[0]&&(a=e.React.createElement(t.JimuMapViewComponent,{useMapWidgetId:null===(r=this.props.useMapWidgetIds)||void 0===r?void 0:r[0],onActiveViewChange:this.activeViewChangeHandler})),e.React.createElement("div",{className:"widget-addLayers jimu-widget p-2",style:{height:"100%",overflow:"auto"}},e.React.createElement("div",null,e.React.createElement("h3",null,"Create a New Project"),e.React.createElement("input",{type:"text",value:this.state.projectName,onChange:this.handleProjectNameChange,placeholder:"Enter project name"}),e.React.createElement("button",{onClick:this.addProject},"Add Project")),e.React.createElement("div",null,e.React.createElement("h3",null,"Select a Project"),e.React.createElement("select",{value:this.state.selectedProjectId||"",onChange:this.handleProjectSelectionChange},e.React.createElement("option",{value:"",disabled:!0},"Select a project"),this.state.projects.map((t=>e.React.createElement("option",{key:t.id,value:t.id},t.name)))),e.React.createElement("button",{onClick:this.removeProject,disabled:!this.state.selectedProjectId},"Remove Project")),e.React.createElement("div",{ref:this.myRef},e.React.createElement("style",null,"\n    .esri-editor__scroller {\n        overflow-y: auto;\n        padding-top: $cap-spacing--half;\n        padding-bottom: $cap-spacing;\n      }\n      .esri-editor__content-group {\n        max-height: 1em;\n      }\n    ")),a)}}function o(e){c.p=e}})(),s})())}}}));